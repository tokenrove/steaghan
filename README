
This is steaghan version alpha zero. It is an alpha release, and is
yet ready for public consumption - think of this as a preview.
There are no checks to determine whether the values one specifies
nor the files one provides are sane, and so improper use can lead
to data loss. (Most notably, in the current version, avoid using
wrapper/wav.so, and, to a lesser extent, prpg/composite.so)

``Documentation'':
 wrapper modules ---> allow steaghan to work with various file formats.
                      pgm -> portable graymap format
                      ppm -> portable pixmap format
                      wav -> microsoft wave format (riff)
                      bmp -> microsoft bitmap format
prpg modules ---> the core of steaghan, these modules decide how to spread
                  and mix the bits. [prpg stands for pseudorandom permutation
                                     generator, incidentally]
                  classic -> the ``classical'' shuffle algorithm - fast,
                             but very high in memory consumption 
                  lr -> the luby-rackoff construct, based on des. effective
                        but slow compared to classic. (uses very little 
                        memory, however)
                  composite -> lr construct for composite n, this module
                               is very effective for pixmaps and similar,
                               but can result in data loss for other formats.

Acknowledgements:
  Huge thanks to Daniel Barnes, whose donation of access to fast hardware
	was essential for this project.
  Tuomas Aura's paper, ``Practical invisibility in digital communication'',
	was the original inspiration for this program. (Four years ago,
	now!)
  Luby and Rackoff, of course.
